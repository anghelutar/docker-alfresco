FROM hub.xenit.eu/tomcat:7.0.69-jdk8

ARG ALFRESCO_VERSION_MAJOR
ARG ALFRESCO_VERSION_MINOR
ARG ALFRESCO_VERSION_REV
ARG ALFRESCO_FLAVOR

# ${CATALINA_HOME} is set to ${CATALINA_HOME} in upstream

# download location alf
ENV ALFRESCO_VERSION ${ALFRESCO_VERSION_MAJOR}.${ALFRESCO_VERSION_MINOR}.${ALFRESCO_VERSION_REV}
ENV ALFRESCO_FLAVOR ${ALFRESCO_FLAVOR}

USER	root

# downloading ALF & components
RUN	apt-get update && \
	apt-get install -y curl unzip libice6 libsm6 libxt6 libxrender1 libxinerama1 libfontconfig1 libcups2 libdbus-glib-1-2 libglu1 ghostscript imagemagick vim locate xmlstarlet jq && \
	rm -rf ${CATALINA_HOME}/webapps/* && \
	mkdir -p ${CATALINA_HOME}/bin && \
	touch ${CATALINA_HOME}/bin/setenv.sh && \
    sed -i 's/shared.loader=/shared.loader=${catalina.base}\/shared\/classes,${catalina.base}\/shared\/lib\/*.jar/' ${CATALINA_HOME}/conf/catalina.properties && \

    # Configure server.xml
    xmlstarlet edit --inplace \
        --var server "/Server/@port" \
            --update '$server' --value \$\{TOMCAT_SERVER_PORT\} \
        --delete "/Server/Listener[@className='org.apache.catalina.core.JasperListener']" \
        --delete "/Server/Listener[@className='org.apache.catalina.core.JreMemoryLeakPreventionListener']" \
        --delete "/Server/Listener[@className='org.apache.catalina.core.ThreadLocalLeakPreventionListener']" \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"HTTP/1.1\"]/@port" \
            --update '$connector' --value \$\{TOMCAT_PORT\} \
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
            --insert '$connector' --type attr --name maxThreads --value \$\{TOMCAT_MAX_THREADS\} \	    
            --insert '$connector' --type attr --name maxHttpHeaderSize --value \$\{TOMCAT_MAX_HTTP_HEADER_SIZE\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"HTTP/1.1\"]/@redirectPort" \
            --update '$connector' --value \$\{TOMCAT_PORT_SSL\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]/@port" \
            --update '$connector' --value \$\{TOMCAT_AJP_PORT\} \	
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]/@redirectPort" \
           --update '$connector' --value \$\{TOMCAT_PORT_SSL\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]" \
        --append '$connector' --type elem --name Connector \
            --var connector '$prev' \
            --insert '$connector' --type attr --name port --value \$\{TOMCAT_PORT_SSL\} \
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
            --insert '$connector' --type attr --name protocol --value org.apache.coyote.http11.Http11Protocol \
            --insert '$connector' --type attr --name SSLEnabled --value true \
            --insert '$connector' --type attr --name maxThreads --value \$\{TOMCAT_MAX_THREADS\} \
            --insert '$connector' --type attr --name scheme --value https \
            --insert '$connector' --type attr --name keystoreFile --value /opt/alfresco/keystore/ssl.keystore \
            --insert '$connector' --type attr --name keystorePass --value kT9X6oe68t \
            --insert '$connector' --type attr --name keystoreType --value JCEKS \
            --insert '$connector' --type attr --name secure --value true \
            --insert '$connector' --type attr --name connectionTimeout --value 240000 \
            --insert '$connector' --type attr --name truststoreFile --value /opt/alfresco/keystore/ssl.truststore \
            --insert '$connector' --type attr --name truststorePass --value kT9X6oe68t \
            --insert '$connector' --type attr --name truststoreType --value JCEKS \
            --insert '$connector' --type attr --name clientAuth --value want \
            --insert '$connector' --type attr --name sslProtocol --value TLS \
            --insert '$connector' --type attr --name allowUnsafeLegacyRenegotiation --value true \
            --insert '$connector' --type attr --name maxHttpHeaderSize --value \$\{TOMCAT_MAX_HTTP_HEADER_SIZE\} \
            --insert '$connector' --type attr --name maxSavePostSize --value -1 \
        ${CATALINA_HOME}/conf/server.xml && \

    xmlstarlet edit --inplace \
        --subnode "/tomcat-users" --type elem --name user \
            --var user '$prev' \
            --insert '$user' --type attr --name username --value "CN=Alfresco Repository Client, OU=Unknown, O=Alfresco Software Ltd., L=Maidenhead, ST=UK, C=GB" \
            --insert '$user' --type attr --name roles --value "repoclient" \
            --insert '$user' --type attr --name password --value "null" \
        --append '$user' --type elem --name user \
            --var user '$prev' \
            --insert '$user' --type attr --name username --value "CN=Alfresco Repository, OU=Unknown, O=Alfresco Software Ltd., L=Maidenhead, ST=UK, C=GB" \
            --insert '$user' --type attr --name roles --value "repository" \
            --insert '$user' --type attr --name password --value "null" \
        ${CATALINA_HOME}/conf/tomcat-users.xml && \


# clean up
	apt-get --purge -y remove unzip xmlstarlet && \
        apt-get --purge -y autoremove && \
        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# add the keystore
ADD keystore /opt/alfresco/keystore 

# add alfresco configuration file
ADD 	alfresco-global.properties ${CATALINA_HOME}/shared/classes/

# share-config-custom - disables CSRF token for now
# TODO use envsubst to put in $HOSTNAME ?
RUN 	mkdir -p ${CATALINA_HOME}/shared/classes/alfresco/web-extension/
ADD 	share-config-custom.xml ${CATALINA_HOME}/shared/classes/alfresco/web-extension/

# copy init file
RUN	mkdir -p /opt/alfresco
COPY 	init.sh /opt/alfresco/
RUN	chmod u+x /opt/alfresco/init.sh && \
# permissions
 	chown -hR tomcat /opt/alfresco && \
	chown -hR tomcat ${CATALINA_HOME}

# named volumes
VOLUME 	/opt/alfresco/alf_data ${CATALINA_HOME}/temp ${CATALINA_HOME}/logs

WORKDIR /opt/alfresco

#install gosu to run catalina.sh as user tomcat in init.sh
ENV GOSU_VERSION 1.9
RUN set -x \
    && apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \
    && dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')" \
    && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch" \
    && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc" \
    && export GNUPGHOME="$(mktemp -d)" \
    && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \
    && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \
    && rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc \
    && chmod +x /usr/local/bin/gosu \
    && gosu nobody true \
    && apt-get purge -y --auto-remove ca-certificates wget

HEALTHCHECK --interval=10s --timeout=3s --retries=3 --start-period=20s CMD curl -f http://localhost:8080/alfresco/s/api/server || exit 1

# start ALF
ENTRYPOINT ["/opt/alfresco/init.sh"]
CMD 	["app:start"]
