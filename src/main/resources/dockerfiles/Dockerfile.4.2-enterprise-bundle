FROM ubuntu:14.04

ARG ALFRESCO_VERSION_MAJOR
ARG ALFRESCO_VERSION_MINOR
ARG ALFRESCO_VERSION_REV
ARG ALFRESCO_FLAVOR
ARG SECRET_ID

# download location alf
ENV ALFRESCO_VERSION ${ALFRESCO_VERSION_MAJOR}.${ALFRESCO_VERSION_MINOR}.${ALFRESCO_VERSION_REV}
ENV ALFRESCO_FLAVOR ${ALFRESCO_FLAVOR}

ENV CATALINA_HOME /opt/alfresco/tomcat
ENV JAVA_HOME /opt/alfresco/java

RUN useradd alfresco -u 1000 -d /opt/alfresco -s /bin/bash
USER root

RUN chown -R alfresco:alfresco /tmp /opt && \

    echo "Europe/Brussels" > /etc/timezone && \
    dpkg-reconfigure -f noninteractive tzdata && \
    
    apt-get update && \
    apt-get install -y \
        curl \
        libcups2 \
        # libdbus required for libreofficecomponent
        libdbus-glib-1-2 \
        libice6 \
        libfontconfig1 \
        libsm6 \
        libxt6 \
        libxrender1 \
        libxinerama1 \
	    xmlstarlet \
		jq && \

    # Get artifactory credentials
    APPROLE_ID="0fbdaa0a-86db-d637-f8f5-19a41106fc20" && \
    token=$(curl -k --request POST --data "{\"role_id\":\"$APPROLE_ID\",\"secret_id\":\"$SECRET_ID\"}" https://vault.local.xenit.eu:8200/v1/auth/approle/login | jq -r .auth.client_token) && \
    ARTIFACTORY_LOGIN=$(curl -k -H "X-Vault-Token: $token" -X GET https://vault.local.xenit.eu:8200/v1/secret/Applications/artifactory.xenit.eu/readall | jq -r '"\(.data.username):\(.data.password)"') && \


    # Download Alfresco intaller from artifactory.xenit.eu
    curl -o /tmp/installer.bin https://${ARTIFACTORY_LOGIN}@artifactory.xenit.eu/artifactory/simple/xenit-release-local/org/alfresco/enterprise/${ALFRESCO_VERSION}/alfresco-enterprise-${ALFRESCO_VERSION}-installer-linux-x64.bin && \
    chmod +x /tmp/installer.bin && \

    rm -rf /var/lib/apt/lists/* && \

    # Install as user alfresco


    # The `install_opts` are documented at http://docs.alfresco.com/5.0/concepts/silent-alf-install.html
    # We're preferring to specify the options as arguments
#RUN /tmp/installer.bin \
    sudo --user alfresco /tmp/installer.bin \

    # Installation mode.
    # Default is `gtk`. Options are `gtk`, `xwindow`, `text`, `unattended`.
    --mode unattended \

    # Default is `javaalfresco,postgres,alfresco,alfrescosolr4,alfrescogoogledocs,libreofficecomponent`
    # Options are `javaalfresco`, `postgres`, `alfrescosolr`, `alfrescosolr4`, `alfrescowcmqs`, `alfrescogoogledocs`, `libreofficecomponent`
    --enable-components javaalfresco,postgres,libreofficecomponent \

    # Default is `alfrescosolr,alfrescowcmqs`
    # Options are `javaalfresco`, `postgres`, `alfrescosolr`, `alfrescosolr4`, `alfrescowcmqs`, `alfrescogoogledocs`, `libreofficecomponent`
    --disable-components alfrescowcmqs,alfrescogoogledocs \

    # Install location
    --prefix /opt/alfresco \

    # Set a default admin password
    --alfresco_admin_password admin \

    # Option to install Alfresco as a service. Default is `1`
    --baseunixservice_install_as_service 0 && \

    # Configure server.xml
    xmlstarlet edit --inplace \
        --var server "/Server/@port" \
            --update '$server' --value \$\{TOMCAT_SERVER_PORT\} \
        --delete "/Server/Listener[@className='org.apache.catalina.core.JasperListener']" \
        --delete "/Server/Listener[@className='org.apache.catalina.core.JreMemoryLeakPreventionListener']" \
        --delete "/Server/Listener[@className='org.apache.catalina.core.ThreadLocalLeakPreventionListener']" \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"HTTP/1.1\"]/@port" \
            --update '$connector' --value \$\{TOMCAT_PORT\} \
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
            --insert '$connector' --type attr --name maxThreads --value \$\{TOMCAT_MAX_THREADS\} \	    
            --insert '$connector' --type attr --name maxHttpHeaderSize --value \$\{TOMCAT_MAX_HTTP_HEADER_SIZE\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"HTTP/1.1\"]/@redirectPort" \
            --update '$connector' --value \$\{TOMCAT_PORT_SSL\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]/@port" \
            --update '$connector' --value \$\{TOMCAT_AJP_PORT\} \	
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]/@redirectPort" \
            --update '$connector' --value \$\{TOMCAT_PORT_SSL\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]" \
        --append '$connector' --type elem --name Connector \
            --var connector '$prev' \
            --insert '$connector' --type attr --name port --value \$\{TOMCAT_PORT_SSL\} \
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
            --insert '$connector' --type attr --name protocol --value org.apache.coyote.http11.Http11Protocol \
            --insert '$connector' --type attr --name SSLEnabled --value true \
            --insert '$connector' --type attr --name maxThreads --value \$\{TOMCAT_MAX_THREADS\} \
            --insert '$connector' --type attr --name scheme --value https \
            --insert '$connector' --type attr --name keystoreFile --value /opt/alfresco/keystore/ssl.keystore \
            --insert '$connector' --type attr --name keystorePass --value kT9X6oe68t \
            --insert '$connector' --type attr --name keystoreType --value JCEKS \
            --insert '$connector' --type attr --name secure --value true \
            --insert '$connector' --type attr --name connectionTimeout --value 240000 \
            --insert '$connector' --type attr --name truststoreFile --value /opt/alfresco/keystore/ssl.truststore \
            --insert '$connector' --type attr --name truststorePass --value kT9X6oe68t \
            --insert '$connector' --type attr --name truststoreType --value JCEKS \
            --insert '$connector' --type attr --name clientAuth --value want \
            --insert '$connector' --type attr --name sslProtocol --value TLS \
            --insert '$connector' --type attr --name allowUnsafeLegacyRenegotiation --value true \
            --insert '$connector' --type attr --name maxHttpHeaderSize --value \$\{TOMCAT_MAX_HTTP_HEADER_SIZE\} \
            --insert '$connector' --type attr --name maxSavePostSize --value -1 \
        --delete "/Server/Service[@name='Catalina']/Connector[@port=\"8443\"]" \	    
        ${CATALINA_HOME}/conf/server.xml && \

	xmlstarlet edit --inplace \
        --subnode "/tomcat-users" --type elem --name user \
            --var user '$prev' \
            --insert '$user' --type attr --name username --value "CN=Alfresco Repository Client, OU=Unknown, O=Alfresco Software Ltd., L=Maidenhead, ST=UK, C=GB" \
            --insert '$user' --type attr --name roles --value "repoclient" \
            --insert '$user' --type attr --name password --value "null" \
        --append '$user' --type elem --name user \
            --var user '$prev' \
            --insert '$user' --type attr --name username --value "CN=Alfresco Repository, OU=Unknown, O=Alfresco Software Ltd., L=Maidenhead, ST=UK, C=GB" \
            --insert '$user' --type attr --name roles --value "repository" \
            --insert '$user' --type attr --name password --value "null" \
        ${CATALINA_HOME}/conf/tomcat-users.xml && \

# clean up
	apt-get --purge -y remove xmlstarlet && \
        apt-get --purge -y autoremove && \
        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

COPY startup.sh ${CATALINA_HOME}/bin/
RUN chown alfresco:alfresco ${CATALINA_HOME}/bin/startup.sh

RUN \

    mv /opt/alfresco/alf_data/keystore /opt/alfresco/keystore && \
    chown -R alfresco:alfresco /opt/alfresco/keystore && \
    chmod -R o-rwx /opt/alfresco/keystore && \
    sed -i "s#^\(dir.keystore\s*=\s*\).*\$#\1/opt/alfresco/keystore#" ${CATALINA_HOME}/shared/classes/alfresco-global.properties


#install gosu to run catalina.sh as user tomcat in init.sh
ENV GOSU_VERSION 1.9
RUN set -x \
    && apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \
    && dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')" \
    && wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch" \
    && wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc" \
    && export GNUPGHOME="$(mktemp -d)" \
    && gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \
    && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \
    && rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc \
    && chmod +x /usr/local/bin/gosu \
    && gosu nobody true \
    && apt-get purge -y --auto-remove ca-certificates wget

COPY init.sh /opt/alfresco/

# share-config-custom - disables CSRF toeken for now
# TODO use envsubst to put in $HOSTNAME ?
ADD share-config-custom.xml ${CATALINA_HOME}/shared/classes/alfresco/web-extension/

VOLUME ${CATALINA_HOME}/temp ${CATALINA_HOME}/logs

ENTRYPOINT ["/opt/alfresco/init.sh"]
CMD ["app:start"]
